name: Release

on:
  push:
    tags:
      - 'v*' # v0.8.1

jobs:
  build:
    name: Build ${{ matrix.target_os }}_${{ matrix.target_arch }} binaries
    runs-on: ${{ matrix.os }}
    env:
      GOVER: 1.15
      GOLANG_CI_LINT_VER: v1.31
      GOOS: ${{ matrix.target_os }}
      GOARCH: ${{ matrix.target_arch }}
      GOPROXY: https://proxy.golang.org
      ARCHIVE_OUTDIR: dist/archives
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        target_arch: [arm, arm64, amd64]
        include:
          - os: ubuntu-latest
            target_os: linux
          - os: windows-latest
            target_os: windows
          - os: macOS-latest
            target_os: darwin
        exclude:
          - os: windows-latest
            target_arch: arm
          - os: windows-latest
            target_arch: arm64
          - os: macOS-latest
            target_arch: arm
          - os: macOS-latest
            target_arch: arm64
    steps:

    - name: Setup (Go ${{ env.GOVER }})
      id: go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOVER }}

    - name: Checkout
      id: setup
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@preview
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-

    - name: Tidy
      run: |
        go mod tidy 
        go mod vendor

    - name: Lint
      uses: golangci/golangci-lint-action@v1
      with:
        version: ${{ env.GOLANG_CI_LINT_VER }}
        only-new-issues: true

    - name: Test
      run: go test -v -count=1 -race ./...

    - name: Archive
      run: |
        mkdir -p ${{ env.ARCHIVE_OUTDIR }}
        make release GOOS=${{ matrix.target_os }} GOARCH=${{ matrix.target_arch }} ARCHIVE_OUT_DIR=${{ env.ARCHIVE_OUTDIR }}

    - name: Upload
      uses: actions/upload-artifact@master
      with:
        name: cli_drop
        path: ${{ env.ARCHIVE_OUTDIR }}